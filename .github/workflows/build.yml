name: Build

on:
  workflow_dispatch:
  push:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Get version
      id: getver
      run: echo "::set-output name=body::`echo v0.13.20`"

    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: "^1.18.0"
        
    - name: Build the nezha-dashboard
      run: |
        git clone https://github.com/naiba/nezha.git
        cd nezha
        go mod tidy -v
        CGO_ENABLE=0 GOOS=linux GOARCH=amd64 go build cmd/dashboard/main.go
        mv main dashboard
        CGO_ENABLE=0 GOOS=linux GOARCH=amd64 go build cmd/agent/main.go
        mv main agent
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.getver.outputs.body }}
        release_name: Release ${{ steps.getver.outputs.body }}
        body: Binary build for Linux system with amd64 architecture.
        draft: false
        prerelease: false

    - name: Upload Release dashboard
      id: upload-release-dashboard
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: nezha/dashboard
        asset_name: dashboard
        asset_content_type: application/octet-stream

    - name: Upload Release agent
      id: upload-release-agent
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: nezha/agent
        asset_name: agent
        asset_content_type: application/octet-stream
